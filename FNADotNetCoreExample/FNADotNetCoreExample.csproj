<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <RuntimeIdentifiers>win-x64;win-x86;osx-x64;linux-x64</RuntimeIdentifiers>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\FNA\FNA.Core.csproj" />
  </ItemGroup>

  <!--
    When publishing RuntimeIdentifier will tell us the platform we're building
    so we use that to determine which platform to build for.
    When that value isn't set it means we're doing a regular build so we just
    use the OS doing the build to figure out what to build for.
  -->
  <PropertyGroup Condition="'$(RuntimeIdentifier)' != ''">
    <IsLinux Condition="$(RuntimeIdentifier.Contains('linux'))">true</IsLinux>
    <IsMacOS Condition="$(RuntimeIdentifier.Contains('osx'))">true</IsMacOS>
    <IsWindows Condition="$(RuntimeIdentifier.Contains('win'))">true</IsWindows>
    <Is64Bit Condition="$(RuntimeIdentifier.Contains('x64'))">true</Is64Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(RuntimeIdentifier)' == ''">
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
    <IsMacOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsMacOS>
    <IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</IsWindows>
    <Is64Bit Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">true</Is64Bit>
  </PropertyGroup>

  <!-- Determine the correct folder for our fnalibs -->
  <PropertyGroup>
    <FNALibs Condition="'$(IsLinux)' == 'true' and '$(Is64Bit)' == 'false'">lib</FNALibs>
    <FNALibs Condition="'$(IsLinux)' == 'true' and '$(Is64Bit)' == 'true'">lib64</FNALibs>
    <FNALibs Condition="'$(IsMacOS)' == 'true'">osx</FNALibs>
    <FNALibs Condition="'$(IsWindows)' == 'true' and '$(Is64Bit)' == 'true'">x64</FNALibs>
    <FNALibs Condition="'$(IsWindows)' == 'true' and '$(Is64Bit)' == 'false'">x86</FNALibs>
  </PropertyGroup>

  <!--
    Copy over the correct fnalibs for running. Note that this is just to support
    local development. When we publish the app we'll do things a little
    differently based on the platform target.
  -->
  <ItemGroup>
    <Content Include="$(MSBuildThisFileDirectory)/fnalibs/$(FNALibs)/*.*">
      <Link>%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>False</Visible>
    </Content>
  </ItemGroup>

  <!--
    The CreateMacOSAppBundle handles bundling things up for macOS and is hooked
    up here to always run after the Publish target completes.
  -->
  <Target
    Name="CreateMacOSAppBundle"
    AfterTargets="Publish"
    Condition="$(IsMacOS) == 'true'"
  >
    <!-- Ensure clean output -->
    <RemoveDir Directories="$(PublishDir)$(ProjectName).app" />
    <Delete Files="$(PublishDir)$(ProjectName).zip" />

    <!--
      Make the macOS App Bundle Structure:
      https://developer.apple.com/library/archive/documentation/CoreFoundation/Conceptual/CFBundles/BundleTypes/BundleTypes.html#//apple_ref/doc/uid/10000123i-CH101-SW19
    -->
    <MakeDir Directories="$(PublishDir)$(ProjectName).app" />
    <MakeDir Directories="$(PublishDir)$(ProjectName).app/Contents" />
    <MakeDir Directories="$(PublishDir)$(ProjectName).app/Contents/MacOS" />
    <MakeDir Directories="$(PublishDir)$(ProjectName).app/Contents/Resources" />

    <!-- Copy static resources from our game directory into the bundle -->
    <Copy
      SourceFiles="./macOS/Info.plist"
      DestinationFolder="$(PublishDir)$(ProjectName).app/Contents"
      OverwriteReadOnlyFiles="true"
    />

    <!-- Move all published files into the app bundle -->
    <ItemGroup>
      <PublishedFiles
        Include="$(PublishDir)**/*"
        Exclude="
          $(PublishDir)$(ProjectName).app/**/*;
          $(PublishDir)**/*.pdb
        " />
    </ItemGroup>
    <Move
      SourceFiles="@(PublishedFiles)"
      DestinationFolder="$(PublishDir)$(ProjectName).app/Contents/MacOS"
      OverwriteReadOnlyFiles="true"
    />
  </Target>

  <!--
    If you're compiling on macOS and you've provided a MacOSCodeSignIdentity
    then the project will automatically code sign the resulting app bundle.
  -->
  <Target
    Name="CodeSignMacOSApp"
    AfterTargets="CreateMacOSAppBundle"
    Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true' and '$(MacOSCodeSignIdentity)' != ''"
  >
    <Message Text="Code signing app with '$(MacOSCodeSignIdentity)'..." Importance="high"/>
    <Exec Command="codesign -s '$(MacOSCodeSignIdentity)' --entitlements macOS/Publish.entitlements --force --deep --verbose --options runtime '$(PublishDir)$(ProjectName).app'" />
  </Target>

</Project>
